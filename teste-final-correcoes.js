/**
 * Teste final das corre√ß√µes implementadas
 * - Nome aparece apenas uma vez
 * - √ìrg√£os julgadores s√£o preenchidos quando existem
 * - Perfis s√£o agregados corretamente
 */

const ServidorDatabaseService = require('./src/utils/servidor-database-service');

async function testeCompleto() {
    const service = new ServidorDatabaseService();
    
    try {
        console.log('üß™ TESTE FINAL DAS CORRE√á√ïES');
        console.log('=' .repeat(50));
        
        // Teste 1: CPF sem √≥rg√£os julgadores (caso original do usu√°rio)
        console.log('\nüìã Teste 1: CPF sem √≥rg√£os julgadores');
        const resultado1 = await service.buscarServidores('1', '00000000272', '', 10);
        console.log('Resultado:', JSON.stringify(resultado1, null, 2));
        
        if (resultado1.length > 0) {
            const servidor = resultado1[0];
            console.log('‚úÖ Verifica√ß√µes:');
            console.log(`- Nome √∫nico: ${servidor.nome}`);
            console.log(`- Perfis agregados: ${servidor.perfil}`);
            console.log(`- Status OJ: ${servidor.orgaosJulgadores}`);
            console.log(`- Total localiza√ß√µes: ${servidor.totalLocalizacoes}`);
        }
        
        // Teste 2: CPF com √≥rg√£os julgadores
        console.log('\nüìã Teste 2: CPF com √≥rg√£os julgadores');
        const resultado2 = await service.buscarServidores('1', '50152414886', '', 10);
        console.log('Resultado:', JSON.stringify(resultado2, null, 2));
        
        if (resultado2.length > 0) {
            const servidor = resultado2[0];
            console.log('‚úÖ Verifica√ß√µes:');
            console.log(`- Nome √∫nico: ${servidor.nome}`);
            console.log(`- Perfis: ${servidor.perfil}`);
            console.log(`- OJs encontrados: ${servidor.totalOjs}`);
            console.log(`- Data in√≠cio: ${servidor.dataInicio}`);
        }
        
        console.log('\nüéâ CORRE√á√ïES IMPLEMENTADAS COM SUCESSO!');
        console.log('- ‚úÖ Nome aparece apenas uma vez por usu√°rio');
        console.log('- ‚úÖ Perfis s√£o agregados em uma √∫nica linha');
        console.log('- ‚úÖ √ìrg√£os julgadores s√£o preenchidos quando existem');
        console.log('- ‚úÖ "N√£o informado" quando n√£o h√° dados');
        
    } catch (error) {
        console.error('‚ùå Erro no teste:', error.message);
    } finally {
        await service.close();
    }
}

testeCompleto();